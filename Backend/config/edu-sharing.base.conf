// DO NOT EDIT THIS FILE
// this is the base config file
// make any custom modifications to the file "edu-sharing.conf"

// security and management functions
security {
    fileManagement {
        mimetypeVerification: {
            // verify mimetypes via magic bytes (tika)
            // and block non white-listed mimetypes
            enabled: false
            // enable the support for unknown mimetypes (application/octet-stream). Not recommended
            allowUnknownMimetypes: false
            list: {
                // list of mimetype / allowed extensions (or "*" to allow any extension for this mimetype)
                // "image/jpeg": ["jpg", "jpeg"]
            }
        }
    }
}

// basic repository features
repository: {
    multilang: false // multilang support, this is a legacy variable and only "false" is supported
    // permission mapping from remote lms systems-
    lmsCodes: "moodle,moodle/course:delete,moodle/course:update;fronter,fronter/course:delete,fronter/course:update;opal,opal/course:delete,opal/course:update"
    // deliver repository metadata with url: http://host:8080/edu-sharing/metadata
    exportMetadata: true
    //database related options
    database:{
        // scripts to run on startup (e.g. for updating tables)
        // will be run in the order of the array
        scripts:{
            // core scripts, please DO NOT override or change them
            core:["tracking.sql.properties",
                    "tracking.u1.sql.properties",
                    "tracking.u2.sql.properties",
                    "tracking.u3.sql.properties",
                    "tracking.u4.sql.properties"],
            custom:[] // any custom scripts (this can be safely overriden)
        }
    }
    // statistics endpoints (for providing public information about content counts, user counts, etc.)
    statistics:{
        // shall the iam/person api provide statistics by user?
        // this might impact the system performance
        // if disabled, the profile/about page won't show statistical numbers about an user
        byUser: true
        api:{
            enabled:false
        }
    }
    // config for bulk import api
    bulk: {
        // register one or more interceptors of type BulkServiceInterceptorInterface
        // please refer to the interface definition for usage
        interceptors: []
    }
    // configuration relevant for edu-sharing organizations
    organizations {
        // configuration for admin groups
        admins {
            // whether members can manage their groups/users inside the organizations
            // when enabled, they'll have access to the "User management" view
            canManage: true
        }
    }
    // allow and control how the system communicates with other systems
    communication:{
        resolveUrlInformation:true // allows the repository to fetch metadata from a url ressource (when saving a link)
        // configure splash (so automatic thumbnails from websites are supported)
        splash: {
            // url to splash, e.g. "https://thumbnail.example.com/render.png"
            url: null
            // time to wait before website is captured
            wait: 0.5
            // max time to wait for splash to generate a screenshot
            timeout: 10
            // you may add more keys, they will be added as url params for splash
        }
    }
    // configure tracking related functions
    tracking:{
        userMode: "session" // the mode to track users, either "obfuscate", "session", "none" or "full"
    }
    // the default required status for users to login. If not set, any status will be accepted
    personActiveStatus: "active"

    // privacy related configurations
    privacy: {
       // if true, e-mail all e-mail addresses inside vcards will be filtered if the user has no write permissions on the item
       // affects any api output like REST or OAI
       filterVCardEmail: false
       // if true, all e-mail addresses of creators/modifiers will be filtered if the user has no write permissions on the item
       filterMetadataEmail: false
    }

    httpclient: {
        // proxy to use for http requests (e.g. querying import data)
        proxy: {
            //proxyhost:proxyhost
            //proxyport:3128
            //proxyuser
            //proxypass
            //nonproxyhosts
        }
        //disableSNI4Hosts: ["misconfigured.ssl.host"]
    }
    // configuration of the DOI handleservice
    handleservice: {
        // is the handleservice active?
        enabled: false
        prefix: null
        // path of the private key file
        privkey: null
        repoid: null
        email: null
    }
    register: {
        // Class to use, for creating Alfresco Users use "RegisterServiceImpl", for LDAP "RegisterServiceLDAPImpl"
        class: "RegisterServiceImpl"
        // Configuration only relevant if LDAP is used
        ldap: {
            // Authentication method
            authentication: "simple"
            // Server, should start with ldap://
            server: null
            // Username/dn to authenticate on the ldap server (this user should have write permissions to bind new authorities)
            username: null
            // Password for the user
            password: null
            // The baseDN (where to create new users)
            baseDN: "ou=people,dc=nodomain"
            // Hashing algorithm for passwords (currently md5 or none supported)
            passwordAlgorithm: "md5"
        }
    }
}
// config for copy-based publishing of nodes
publish{
    // the node if of the parent node where published nodes get stored
    node: null
    // the pattern of the node structure (must be using date pattern data)
    nodePattern: "yyyy/MM/dd"
    // the authorityName of the new owner of published nodes
    owner: null
}
// rendering related config
rendering {
    // shall the rendering service pre-render (cache) objects after creation?
    prerender: true
}
// config for frontend/security related headers etc.
angular {
    headers: {
        // enable browser XSS protection (1 is usually the default of browsers)
        X-XSS-Protection: "1"
        // configure allowed ulrs where this edu-sharing ui might be embedded as a frame/embed object
        X-Frame-Options: "sameorigin"
        // be careful when modifying these parameters!
        // also test rendering service and external tools, like the app
        Content-Security-Policy: {
            default-src: "* data: blob: 'self' gap://ready"
            connect-src: "'self' gap://ready"
            img-src: "* data: blob:; style-src * 'unsafe-inline'"
            script-src: "* 'unsafe-inline' 'unsafe-eval' https://app-registry.edu-sharing.com"
            font-src: "'self' data:"
        }
        // stricter policy, please be aware that some features like custom html content won't work
        // Content-Security-Policy: {
        //     default-src: "data: blob: 'self' gap://ready"
        //         connect-src: "'self' gap://ready"
        //         img-src: "'self' data: blob:; style-src * 'unsafe-inline'"
        //         script-src: "'self' 'unsafe-inline'"
        //         font-src: "'self' data:"
        //     }
        // }
    }
}
// supported connectors (like tinyMCE, OnlyOffice, ...)
connectorList:{
    connectors:[
        {
            id:"TINYMCE", icon:"edit", showNew: true, onlyDesktop: false, hasViewMode: true,
            filetypes:[
                {mimetype: "text/html",filetype: "html",createable: true,editable: true,editorType: "tinymce"}
            ]
        }
    ]
}

// config for available elasticsearch instances (Stream, Frontpage Cache)
elasticsearch:{
    servers: ["127.0.0.1:9200"]
}
// oai importer config
importer:{
    // threading config
    threads:{
        min:1, // min threads to use (>= 1)
        max:6, // max threads to use
        minSpare:1 // min amount of threads to keep free (so threads=min(threads.max,cpuCount-threads.minSpare))
    }
}

exporter:{
    oai:{
        identify:{
            name: null // repo name, if null, the local app caption will be used
            description: "<oai-identifier><scheme>oai</scheme></oai-identifier>" // a repo description
            delete: "no" // no, persistent or transient
            granularity: "Second" // timestamp granularity, Second or Day
            earliestDate: "1900-01-01T00:00:00Z" // earliest datestamp found in repository
        }
        identiferPrefix: "" // each identifier will be prefixed with this string, possible value e.g. "oai:your.domain:"
        itemsPerPage: 300,
        metadataPrefix: "lom" // name of the metadata prefix delivered by oai
        sets: ["default"] // your provided sets. Each specialized set must be defined as an mds query like "oai_<setname>"
        lom:{
            class:org.edu_sharing.repository.server.exporter.OAILOMExporter
        }
    }
    lrmi:{
        properties:{
            identifier: "sys:node-uuid"
            name: "cclom:title,cm:name"
            description: "cclom:general_description"
            keywords: "cclom:general_keyword+ccm:classification_keyword"
            learningResourceType: "ccm:educationallearningresourcetype"
            educationalAudience: "ccm:educationalintendedenduserrole"
            intendedEndUserRole: "ccm:educationalintendedenduserrole"
            typicalAgeRange: "ccm:educationaltypicalagerange"
            timeRequired: "ccm:educationaltypicallearningtime"
            inLanguage: "cclom:general_language"
            version: "cclom:version"
            fileFormat: "cclom:technical_format"
            encodingFormat: "AlfrescoMimeType"
            ContentSize: "cclom:size"
            requirements: "cclom:otherplatformrequirements"
            creditText: "ccm:author_freetext"
        }
    }
}


// class to use for the stream service (default StreamServiceNone)
stream: {
    class:StreamServiceNone
    relevancy: {
        property: "ccm:taxonid"
        depth: 1
        actionLimit: 10
    }
}

// config for scheduled jobs
// to override and add custom jobs, we recommend using "jobs.entries += {...}"
jobs: {
    entries: [
        {
            name: "Built up Cache Job"
            class: "org.edu_sharing.repository.server.jobs.quartz.RefreshCacheJob"
            trigger: "Immediate" // fire at startup
        }
    ]
}