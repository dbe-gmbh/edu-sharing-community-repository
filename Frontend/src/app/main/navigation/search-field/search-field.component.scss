@import '../../../core-ui-module/styles/variables';

@mixin suggestionCardHeading {
    font-size: $fontSizeSmall;
    color: $textLight;
}

:host {
    position: relative;
    display: flex;
}

form {
    display: flex;
    flex-grow: 1;
    min-width: 0;
}

.search-field-wrapper {
    width: 100%;
    display: flex;
    background: $workspaceTopBarInputBackground;
    border-radius: 3px;
    .search-field {
        display: flex;
        width: 100%;
        input {
            background: unset;
            height: 100%;
            border: none;
            &:focus {
                border: none;
                outline: none;
            }
            // Remove clear button inserted by browsers
            &::ms-clear {
                display: none;
            }
            &::-webkit-search-cancel-button {
                display: none;
            }
        }
        button {
            color: $textMain;
        }
    }
    &.input-has-focus {
        &:not(.cdk-keyboard-focused) {
            @include setGlobalFocus();
        }
        &.cdk-keyboard-focused {
            transition: none;
            @include setGlobalKeyboardFocus();
        }
    }
}

.filters-button {
    margin-right: -6px;
    &.mat-badge ::ng-deep .mat-badge-content {
        right: -3px;
        top: -3px;
    }
}

.suggestion-active-filter {
    &.suggestion-active-filter-separator {
        padding-bottom: 8px;
        border-bottom: 1px solid $cardSeparatorLineColor;
        margin-bottom: 8px;
    }
    > label {
        display: flex;
        @include suggestionCardHeading;
        margin-bottom: 5px;
    }
}
.suggestion-card {
    .chips-wrapper {
        display: flex;
        width: 100%;
        flex-wrap: wrap;
    }

    ::ng-deep .mat-mdc-standard-chip {
        word-break: break-word;
        height: unset;
        @each $property, $color in $chip-colors {
            &.filter-chip-#{$property} {
                background-color: $color !important;
            }
        }

        .remove-chip {
            color: var(--textLight) !important;
        }

        .mdc-evolution-chip__text-label {
            padding: 5px 0;
            white-space: normal;
        }

        .mat-mdc-chip-remove {
            color: inherit;
            opacity: 0.4;
        }
    }
}

.search-field-input-wrapper {
    flex: 1 0 0;
    display: flex;
    align-items: center;
    min-width: 120px;
}

.search-input {
    padding: 0 1em;
    color: $workspaceTopBarInputText;
    -webkit-appearance: none; // Fix white background on Safari
    width: unset;
    min-width: 0;
    flex: 1 0 0;
    &::placeholder {
        color: mix($workspaceTopBarInputText, $workspaceTopBarInputBackground, 75%);
    }
}

.submit-button {
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 0 3px 3px 0;
    background-color: mix($workspaceTopBarInputBackground, $workspaceTopBarBackground, 80%);
    & ::ng-deep .mdc-icon-button__ripple {
        border-radius: unset;
    }
}

.clear-button {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 0;
    color: #{rgba($workspaceTopBarInputText, 0.8)};
    &.cdk-keyboard-focused {
        @include setGlobalKeyboardFocus('border');
    }
    @media all and (max-width: ($mobileWidth - $mobileStage*3)) {
        display: none;
    }
}

.suggestion-card {
    width: 100%;
    background-color: $backgroundColor;
    border-radius: 2px;
    padding: 10px;
}

::ng-deep .cdk-overlay-container .suggestion-card {
    es-mds-editor-widget-container {
        label {
            @include suggestionCardHeading;
        }
    }
}
